{
	"info": {
		"_postman_id": "prism-api-collection",
		"name": "Prism Financial Management API",
		"description": "Complete API collection for testing Prism backend services including authentication, user management, and financial operations.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "prism-backend"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Registration successful\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const responseData = pm.response.json();",
									"    pm.environment.set(\"access_token\", responseData.tokens.access);",
									"    pm.environment.set(\"refresh_token\", responseData.tokens.refresh);",
									"    pm.environment.set(\"user_id\", responseData.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{test_username}}\",\n    \"email\": \"{{test_email}}\",\n    \"password\": \"{{test_password}}\",\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login successful\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const responseData = pm.response.json();",
									"    pm.environment.set(\"access_token\", responseData.tokens.access);",
									"    pm.environment.set(\"refresh_token\", responseData.tokens.refresh);",
									"    pm.environment.set(\"user_id\", responseData.user.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{test_email}}\",\n    \"password\": \"{{test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Token refresh successful\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const responseData = pm.response.json();",
									"    pm.environment.set(\"access_token\", responseData.access);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/refresh/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"refresh",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Profile retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has user data\", function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.have.property('id');",
									"    pm.expect(responseData).to.have.property('email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/user/profile/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"profile",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Profile updated successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Updated Test\",\n    \"last_name\": \"User Updated\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/user/profile/update/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"profile",
								"update",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Password changed successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"current_password\": \"{{test_password}}\",\n    \"new_password\": \"{{new_test_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/user/change-password/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"user",
								"change-password",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "List Accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Accounts retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has accounts data\", function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.have.property('count');",
									"    pm.expect(responseData).to.have.property('results');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/accounts/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Account created successfully\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const responseData = pm.response.json();",
									"    pm.environment.set(\"test_account_id\", responseData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Checking Account\",\n    \"account_type\": \"checking\",\n    \"balance\": \"1000.00\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/accounts/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Account Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Account details retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/accounts/{{test_account_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								"{{test_account_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Account updated successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Test Checking Account\",\n    \"account_type\": \"checking\",\n    \"balance\": \"1500.00\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/accounts/{{test_account_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								"{{test_account_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active Accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Active accounts retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/accounts/active/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								"active",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Accounts Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Account summary retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/accounts/summary/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"accounts",
								"summary",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "List Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Categories retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/categories/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Category created successfully\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const responseData = pm.response.json();",
									"    pm.environment.set(\"test_category_id\", responseData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Food Category\",\n    \"category_type\": \"expense\",\n    \"description\": \"Food and dining expenses\",\n    \"color\": \"#FF6B6B\",\n    \"icon\": \"food\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/categories/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Categories Tree",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Categories tree retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/categories/tree/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"tree",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Categories by Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Categories by type retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/categories/by_type/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"by_type",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "List Transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Transactions retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/transactions/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Transaction created successfully\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const responseData = pm.response.json();",
									"    pm.environment.set(\"test_transaction_id\", responseData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Test grocery purchase\",\n    \"amount\": \"-75.50\",\n    \"date\": \"2025-01-15\",\n    \"account_id\": \"{{test_account_id}}\",\n    \"category_id\": \"{{test_category_id}}\",\n    \"notes\": \"Weekly grocery shopping\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/transactions/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transaction Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Transaction details retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/transactions/{{test_transaction_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"{{test_transaction_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Transactions Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Transaction summary retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/transactions/summary/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"summary",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Recent Transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Recent transactions retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/transactions/recent/?limit=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"transactions",
								"recent",
								""
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Budgets",
			"item": [
				{
					"name": "List Budgets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Budgets retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/budgets/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"budgets",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Budget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Budget created successfully\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const responseData = pm.response.json();",
									"    pm.environment.set(\"test_budget_id\", responseData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Monthly Food Budget\",\n    \"amount\": \"500.00\",\n    \"period\": \"monthly\",\n    \"start_date\": \"2025-01-01\",\n    \"end_date\": \"2025-01-31\",\n    \"category_id\": \"{{test_category_id}}\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/budgets/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"budgets",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Current Budgets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Current budgets retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/budgets/current/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"budgets",
								"current",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Over Budget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Over budget data retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/budgets/over_budget/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"budgets",
								"over_budget",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Budget Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Budget summary retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/budgets/summary/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"budgets",
								"summary",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Goals",
			"item": [
				{
					"name": "List Goals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Goals retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/goals/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"goals",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Goal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Goal created successfully\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const responseData = pm.response.json();",
									"    pm.environment.set(\"test_goal_id\", responseData.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Emergency Fund\",\n    \"description\": \"Build emergency fund for 6 months expenses\",\n    \"goal_type\": \"savings\",\n    \"target_amount\": \"10000.00\",\n    \"current_amount\": \"1000.00\",\n    \"target_date\": \"2025-12-31\",\n    \"linked_account_id\": \"{{test_account_id}}\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/goals/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"goals",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Goal Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Goal progress updated successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": \"500.00\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/goals/{{test_goal_id}}/update_progress/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"goals",
								"{{test_goal_id}}",
								"update_progress",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active Goals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Active goals retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/goals/active/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"goals",
								"active",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Goals Near Target",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Goals near target retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/goals/near_target/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"goals",
								"near_target",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Goals Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Goals summary retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/goals/summary/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"goals",
								"summary",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Documentation",
			"item": [
				{
					"name": "Get API Schema",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"API schema retrieved successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/schema/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"schema",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get API Docs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"API docs page loaded successfully\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/docs/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"docs",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set random test data if not already set",
					"if (!pm.environment.get('test_email')) {",
					"    const timestamp = Date.now();",
					"    pm.environment.set('test_email', `test${timestamp}@example.com`);",
					"    pm.environment.set('test_username', `testuser${timestamp}`);",
					"    pm.environment.set('test_password', 'TestPassword123!');",
					"    pm.environment.set('new_test_password', 'NewTestPassword123!');",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test for response time",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"// Global test for content type (if JSON response)",
					"if (pm.response.headers.get('Content-Type') && pm.response.headers.get('Content-Type').includes('application/json')) {",
					"    pm.test('Response is valid JSON', function () {",
					"        pm.response.to.be.json;",
					"    });",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}